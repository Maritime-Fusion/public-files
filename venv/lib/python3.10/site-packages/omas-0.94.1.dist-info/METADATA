Metadata-Version: 2.4
Name: omas
Version: 0.94.1
Summary: Ordered Multidimensional Array Structures
Home-page: https://gafusion.github.io/omas
Author: Orso Meneghini
License: MIT
Keywords: integrated modeling OMFIT IMAS ITER
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: numpy>=1.16.1
Requires-Dist: uncertainties
Requires-Dist: pint
Requires-Dist: netCDF4
Requires-Dist: boto3
Requires-Dist: matplotlib
Requires-Dist: scipy
Requires-Dist: h5py
Requires-Dist: pymongo
Requires-Dist: dnspython
Requires-Dist: xmltodict
Requires-Dist: xarray
Requires-Dist: setuptools>=41.2
Requires-Dist: tqdm
Requires-Dist: Cython
Requires-Dist: importlib_metadata<5; python_version == "3.7"
Provides-Extra: machine
Requires-Dist: omfit_classes; extra == "machine"
Requires-Dist: pexpect; extra == "machine"
Requires-Dist: fortranformat; extra == "machine"
Requires-Dist: pygacode; extra == "machine"
Provides-Extra: hdc
Requires-Dist: pyhdc; extra == "hdc"
Provides-Extra: imas
Requires-Dist: imas; extra == "imas"
Provides-Extra: uda
Requires-Dist: pyuda; extra == "uda"
Provides-Extra: build-structures
Requires-Dist: bs4; extra == "build-structures"
Provides-Extra: build-documentation
Requires-Dist: Sphinx; extra == "build-documentation"
Requires-Dist: sphinx-bootstrap-theme; extra == "build-documentation"
Requires-Dist: sphinx-gallery; extra == "build-documentation"
Requires-Dist: Pillow; extra == "build-documentation"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: summary


OMAS is a Python library designed to simplify the interface of third-party codes with the `ITER <http://iter.org>`_ Integrated Modeling and Analysis Suite (`IMAS <https://confluence.iter.org/display/IMP>`_).

* It provides a **convenient Python API**

* capable of storing data with **different file/database formats**

* in a form that is **always compatible with the IMAS data model**

Mapping the physics codes I/O to the IMAS data model is done in third party Python codes such as the `OMFIT framework <https://omfit.io>`_.
